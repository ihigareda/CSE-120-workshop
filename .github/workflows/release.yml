name: Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

# Global permissions kept minimal; job-level overrides applied.
permissions:
  contents: read

concurrency: release

jobs:
  release:
    name: Build and Release Python Package
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    
    permissions:
      contents: write
      packages: write
    
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    
    steps:
      - name: Generate GitHub App Token
        id: generate_token
        uses: actions/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - id: release
        name: Python Semantic Release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ steps.generate_token.outputs.token }}

      - name: Publish Release (GitHub)
        if: steps.release.outputs.released == 'true'
        uses: python-semantic-release/publish-action@main
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
          tag: ${{ steps.release.outputs.tag }}

  docker:
    name: Build and Release Docker Image
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.released == 'true'
    
    permissions:
      contents: read
      packages: write
      id-token: write
    
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    
    steps:
      - name: Checkout (main)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ needs.release.outputs.version }}
            ghcr.io/${{ github.repository }}:latest
          labels: ${{ steps.meta.outputs.labels }}